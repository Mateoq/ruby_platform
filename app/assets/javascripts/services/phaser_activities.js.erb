prServices.factory('graphicService', ['$rootScope', '$route', function($rootScope, $route){
	var service, graphicBars, pictogram;

	service = function (options, game) {
		service.data = options;
		service.game = game;
		
		var method = service.methods[service.data.method];
		service.game.state.add(method, service[method]);
		service.game.state.start(method);
	};

	service.methods = [ "graphicBars", "pictogram" ];

	service.graphicBars = {
		preload: function (){
			service.game.renderer.resize(service.data.width, service.data.height);
			service.game.load.atlasJSONArray('atlas', service.data.atlasPath, null, service.data.atlasJson);
			this.posbtn = service.data.buttons;
			this.posimg = service.data.bars;
		},
		posbtn: null,
		posimg: null,
		corte: [],
		tween: [],
		imagen: [],
		btn: [],
		create: function (){
			service.game.add.image(0,0, 'atlas','bg');
			
			for (var i = 0; i < 5; i++) {
				this.imagen[i] = service.game.add.sprite(this.posimg[i].x, this.posimg[i].y,'atlas', this.posimg[i].grafica);
				this.imagen[i].anchor.setTo(0.5,1);
				this.imagen[i].visible = false;
				this.corte[i] = new Phaser.Rectangle(0,0,this.imagen[i].width,0);
				this.tween[i] = service.game.add.tween(this.corte[i]).to({height: this.imagen[i].height}, 1000, Phaser.Easing.Linear.Out, false, 0,0, false);
				this.btn[i] = service.game.add.button(this.posbtn[i].x, this.posbtn[i].y,'atlas',function (button){
					var b = this.btn.indexOf(button);
					this.animacion(this.imagen[b], this.corte[b], this.tween[b]);
				},this, this.posbtn[i].btn, this.posbtn[i].btn);
				this.btn[i].input.useHandCursor = true;
			};
		},
		animacion: function (imagen, corte, tween){
			imagen.visible = true;
			tween.start(0);
			imagen.crop(corte);
		},
		update: function (){
			for (var i = 0; i < this.imagen.length; i++) {
				this.imagen[i].updateCrop();
			};
		}
	};

	service.pictogram = {
		pos: null,
		dias: [],
		barras: [],
		corte: [],
		anim: [],
		n: null,
		grupo: [],
		preload: function (){
			this.pos = service.data.positions;
			service.game.renderer.resize(service.data.width, service.data.height);
			service.game.load.atlasJSONArray('atlas', service.data.atlasPath, null, service.data.atlasJson);
		},
		create: function (){
			var self = this;
			for (var i = 0; i < 7; i++) {
				this.barras[i] = service.game.add.sprite(0, this.pos[i].y,'atlas', 'barra');
				this.barras[i].visible = false;
				// barras[i].anchor.setTo(0.5,1);
				this.dias[i] = service.game.add.button(0, this.pos[i].y, 'atlas',function (button) {
					var index = self.dias.indexOf(button);	
					n = index;
					self.barra(self.barras[index], self.anim[index], self.corte[index]);
				} ,this, this.pos[i].dia, this.pos[i].dia);
				this.dias[i].input.useHandCursor = true;
				this.corte[i] = new Phaser.Rectangle(0, 0, 0, this.barras[i].height);
				this.anim[i] = service.game.add.tween(this.corte[i]).to({width: this.barras[i].width}, 1000, Phaser.Easing.Linear.Out,false, 0,0,false);
				this.grupo[i] = service.game.add.group();
				this.grupo[i].alpha = 0;
			};
		},
		update: function (){
			for (var i = 0; i < this.barras.length; i++) {
				this.barras[i].updateCrop();
			};
		},
		barra: function (barra,anim,corte){
			barra.visible = true;
			barra.crop(corte);
			anim.onComplete.add(this.otra,this);
			anim.start(0);
		},
		otra: function (){
			var pos2 = service.data.positions2,
				p = service.data.itemsPositions;

			for (var i = 0; i < p[n].times; i++) {
				this.grupo[n].create(pos2[i].x, p[n].first, 'atlas', 'pre');
				service.game.add.tween(this.grupo[n]).to({alpha:1}, 1000, Phaser.Easing.Linear.None, true,0,0,false);	
			}
		}
	};

	return service;
}]);