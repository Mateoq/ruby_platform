(function () {
	var appManagerServices = angular.module("appManagerServices", []);

	// =================================================================================
	// 	Service to manage each lesson's pages and its progress
	// =================================================================================

	appManagerServices.factory("lessonsProgressService", ['$window', '$rootScope', function ($window, $rootScope) {
		var service = {};

		angular.element($window).on("storage", function(event) {
			if (event.key === "lessons-progress") {
				$rootScope.$apply();
			}
		});

		service.initLesson = function (id, concepts, lessonArray) {
			var lessons = this.getLessons();

			if (!lessons) {
				lessons = {};
			}

			// If it's already set return
			if (lessons.hasOwnProperty(id)) {
				return;             
			}

			var lesson = [];

			for (var i = 0; i < lessonArray.length; i++) {
				var temp = {
					id: i,
					link: lessonArray[i]
				};

				temp.name = "Actividad " + (i - concepts);
				temp.current = false;

				if (0 === i) {
					temp.name = "Introducción";
					temp.current = true;
				} else if (concepts >= i) {
					temp.name = 'Conceptualización ' + i;
				}

				temp.enabled = true;

				if (2 > i) {
					temp.enabled = true;
				}

				lesson.push(temp);
			}

			lessons[id] = lesson;

			var encode = btoa(angular.toJson(lessons));

			$window.localStorage && $window.localStorage.setItem("lessons-progress", encode);
			return this;
		};

		service.getLessons = function () {
			var item = $window.localStorage && $window.localStorage.getItem("lessons-progress"),
				decode = false;
			
			if (null !== item) {
				decode = angular.fromJson(atob(item));
			}
			
			return decode;
		};

		service.getLesson = function (id) {
			var lessons = this.getLessons();

			return lessons[id];
		}

		service.updateLesson = function (index) {
			var lesson = this.getLesson();

			if (lesson.length === index) { return true; }

			lesson[index++].enabled = true;

			var encode = btoa(angular.toJson(lesson));

			$window.localStorage && $window.localStorage.setItem("lessons-progress", encode);
			return this;
		};

		service.setCurrent = function (index, lessonId) {
			var lessons = this.getLessons();

			angular.forEach(lessons[lessonId], function(value, key){
				value.current = false;
			});

			lessons[lessonId][index].current = true;
			var encode = btoa(angular.toJson(lessons));
			$window.localStorage && $window.localStorage.setItem("lessons-progress", encode);
			return this;
		};

		service.getCurrent = function (lesson) {
			var current = {};

			angular.forEach(lesson, function (value, key) {
				if (value.current) {
					current = value;
				}
			});

			return current;
		};

		service.getLastEnabled = function (id) {
			var lesson = this.getLesson(id),
				last = false;

			for (var i = 0; i < lesson.length; i++) {
				if (lesson[i].enabled) {
					last = lesson[i];
				}
			}

			return last;
		};

		return service;
	}]);

	// =================================================================================
	// 	Service to get icons located in a json file
	// =================================================================================
	appManagerServices.factory('iconsService', ['$q', '$http', '$timeout', function($q, $http, $timeout){
		return {
			getIcons: function (){
				var deferred = $q.defer();
				$timeout(function () {
					$http.get('<%= asset_path "icons.json" %>').success(function (data) {
						deferred.resolve(data);
					});
				}, 30);

				return deferred.promise;
			}
		};
	}]);

	// =================================================================================
	// 	Service to manage general local storage for the application
	// =================================================================================

	appManagerServices.factory('localStorageService', ['$window', '$rootScope', function($window, $rootScope){
		var service = {};

		angular.element($window).on("storage", function(event) {
			if (event.key === "pr-data") {
				$rootScope.$apply();
			}
		});

		service.getAll = function () {
			var item = 	$window.localStorage && $window.localStorage.getItem('pr-data'),
				decode = false;

			if (null !== item) {
				decode = angular.fromJson(atob(item));
			}

			return decode;
		};

		service.get = function (category, courseModule) {
			var items = this.getAll();

			if (!items) { return false; }
			if (!items.hasOwnProperty(category)) { return false; }
			if (!items[category].hasOwnProperty(courseModule)) { return false; }

			return items[category][courseModule];
		};

		service.add = function (category, courseModule, values, update) {
			var items = this.getAll();

			update = (angular.isUndefined(update)) ? false : update;

			if (!update) {
				if (items.hasOwnProperty(category)) {
					if (items[category].hasOwnProperty(courseModule)) {
						return false;
					}
				}

				if (!items) { items = {} }
				if (!items.hasOwnProperty(category)) { items[category] = {}; }
				if (!items[category].hasOwnProperty(courseModule)) { items[category][courseModule] = {} };
			}

			items[category][courseModule] = values;

			var encode = btoa(angular.toJson(items));

			$window.localStorage && $window.localStorage.setItem("pr-data", encode);
			return this;
		};

		return service;
	}]);

	// =================================================================================
	// 	Service to manage 'Click Here' guide icons
	// =================================================================================
	appManagerServices.factory('clickHereProgressServices', ['$q', '$http', '$resource', function($q, $http, $resource){
		return {
			update: function (option) {
				if (gon.click_here_menu) return true;
				var deferred = $q.defer();
				var data = {
					option: option,
					grade: gon.course_structure.grade,
					course: gon.course_structure.class_name
				};

				$http.post('/api/click_here_progress', data)
					.success(function (data) {
						deferred.resolve(data);
					});

				return deferred.promise;
			}
		};
	}]);
})();